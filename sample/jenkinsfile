pipeline {
  agent any

  tools {
    maven 'maven'
  }

  stages {
stage('Clean Workspace') {
    steps {
        cleanWs()
    }
}
      stage('Checkout SCM') {
            steps {
                // Checkout only the 'sample' project
                checkout([$class: 'GitSCM',
                          branches: [[name: 'main']], // Specify the branch to checkout
                          doGenerateSubmoduleConfigurations: false,
                          extensions: [[$class: 'CleanCheckout'],
                                       [$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [[path: 'sample']]]], // Specify the path to 'bootdemo'
                          submoduleCfg: [],
                          userRemoteConfigs: [[url: 'https://github.com/sakthivel94/Spring-Boot.git']]])
            }
        }

    stage('Build') {
      steps {
        dir('C:/ProgramData/Jenkins/.jenkins/workspace/college/sample/sample') {
          bat 'mvn clean -Dmaven.test.skip package'
        }
      }
    }

  stage('SonarQube Analysis') {
      environment {
        SONAR_SCANNER_HOME = tool 'sonar-scanner' // Define SonarQube scanner tool
        PATH = "${env.PATH}:${SONAR_SCANNER_HOME}/bin"
      }
      steps {
        withSonarQubeEnv('sonarserver') { 
          bat 'sonar-scanner'
        }
      }
    }

    stage('Run') {
      environment {
       JAVA_HOME = 'C:\\Program Files\\Java\\jdk-17'
        PATH = "${env.JAVA_HOME}\\bin;${env.PATH}"
      }
      steps {
        script {
          def jarFilePath = 'C:/ProgramData/Jenkins/.jenkins/workspace/college/sample/sample/target/sample-0.0.1-SNAPSHOT.jar'
          def batchScript = "cmd /c \"java -jar ${jarFilePath}\""
          bat label: 'Run JAR in Background', script: batchScript
        }
      }
    }
  }
}
